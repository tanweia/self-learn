<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
  <!--<variable resource="props/common.properties" /> -->
  <!--默认在/data/java/logs目录 -->
  <property name="logger.root" value="/data/java/logs" />
  <property name="app.name" value="self-learn" />
  <property name="MY_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%thread] %C{100}.java:%L - %msg%n" />
  <property name="MONITOR_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %C{100}.java:%L - %msg%n" />
  <!-- contextName主要是为了区分在一个web容器下部署多个应用启用jmx时，不会出现混乱 -->
  <contextName>${app.name}</contextName>
  
   <!--保留时间-->
  <property name="log.max.file" value="15" />
  <property name="log.max.size" value="200MB" />

  <!--测试，开发环境需要打印日志 jvm环境变量-Dlogback.env=dev -->
  <if condition='property("logback.env").contains("dev")'>
    <then>
      <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoder 默认配置为PatternLayoutEncoder -->
      	<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      		<level>info</level>
    	</filter>
        <encoder>
          <pattern>${MY_PATTERN}</pattern>
        </encoder>
      </appender>

      <appender name="debug" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logger.root}/${app.name}-debug.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
          <level>debug</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
          <fileNamePattern>${logger.root:-/data/www/java/work/logs}/${app.name}-debug.%d{yyyy-MM-dd}.log.zip</fileNamePattern>
          <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder>
          <pattern>${MY_PATTERN}</pattern>
          <charset>UTF-8</charset>
        </encoder>
      </appender>
    </then>
  </if>


  <appender name="info" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${logger.root}/${app.name}-info.log</file>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>info</level>
    </filter>
	<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
		<fileNamePattern>${logger.root}/${app.name}-info.%d{yyyy-MM-dd}.%i.log.zip
		</fileNamePattern>
		<maxHistory>${log.max.file}</maxHistory>
		<timeBasedFileNamingAndTriggeringPolicy
			class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
			<maxFileSize>${log.max.size}</maxFileSize>
		</timeBasedFileNamingAndTriggeringPolicy>
	</rollingPolicy>
    <encoder>
      <pattern>${MY_PATTERN}</pattern>
      <charset>UTF-8</charset>
    </encoder>
  </appender>
  
  <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${logger.root}/${app.name}-error.log</file>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>error</level>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${logger.root:-/data/www/java/work/logs}/${app.name}-error.%d{yyyy-MM-dd}.log.zip</fileNamePattern>
      <maxHistory>7</maxHistory>
    </rollingPolicy>
    <encoder>
      <!--<pattern>%-4relative [%thread] %-5level %logger{36} - %msg%n</pattern> -->
      <!--<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern> -->
      <pattern>${MY_PATTERN}</pattern>
      <charset>UTF-8</charset>
    </encoder>
  </appender>
  
  
  <appender name="monitor" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${logger.root}/${app.name}-monitor.log</file>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>info</level>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${logger.root:-/data/www/java/work/logs}/${app.name}-monitor.%d{yyyy-MM-dd}.log.zip</fileNamePattern>
      <maxHistory>7</maxHistory>
    </rollingPolicy>
    <encoder>
      <!--<pattern>%-4relative [%thread] %-5level %logger{36} - %msg%n</pattern> -->
      <!--<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern> -->
      <pattern>${MONITOR_PATTERN}</pattern>
      <charset>UTF-8</charset>
    </encoder>
  </appender>
  
  <logger name="xxx.xxx.xxx" level="info" additivity="false">
  	<appender-ref ref="monitor" />
  </logger>
  
  
  <!--perf4j配置 -->
	<appender name="statistics"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logger.root}/${app.name}-perf.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${logger.root}/${app.name}-perf.%d{yyyy-MM-dd}.log
			</FileNamePattern>
		</rollingPolicy>
		<encoder>
			<pattern>${MY_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%msg%n</pattern>
		</layout>
	</appender>

	<appender name="coalescingStatistics"
		class="org.perf4j.logback.AsyncCoalescingStatisticsAppender">
		<timeSlice>10000</timeSlice>
		<appender-ref ref="statistics" />
	</appender>

	<logger name="org.perf4j.TimingLogger" level="info" additivity="false">
		<appender-ref ref="coalescingStatistics" />
	</logger>
	<!--perf4j配置结束 -->
  

  <!-- 过滤指定类的日志 -->
  <logger name="org.apache.zookeeper.ClientCnxn" level="WARN">
  </logger>
  <logger name="com.alibaba.dubbo.remoting.transport.DecodeHandler" level="WARN">
  </logger>
  <logger name="org.springframework.beans.factory.support.DefaultListableBeanFactory" level="INFO">
  </logger>
  <logger name="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" level="INFO">
  </logger>
  
  <root level="debug">
    <!--测试，开发环境需要打印日志 jvm环境变量-Dlogback.env=dev -->
    <if condition='property("logback.env").contains("dev")'>
      <then>
        <appender-ref ref="STDOUT" />
        <appender-ref ref="debug" />
      </then>
    </if>
    <appender-ref ref="info" />
    <!-- <appender-ref ref="warn" /> -->
    <appender-ref ref="error" />
  </root>

</configuration>